{"ast":null,"code":"var _jsxFileName = \"/Users/davidhan/Documents/GitHub/scene-editor-server/scene-editor-server-fe/src/components/scene.component.js\";\nimport React, { Component } from \"react\";\nimport SceneDataService from \"../services/scene.service\"; // import \"./component.css\"\n\nimport { Link } from \"react-router-dom\";\nexport default class Scene extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUser = this.onChangeUser.bind(this);\n    this.onChangeSceneName = this.onChangeSceneName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeTag = this.onChangeTag.bind(this);\n    this.onChangeDataset = this.onChangeDataset.bind(this);\n    this.getScene = this.getScene.bind(this); // this.updatePublished = this.updatePublished.bind(this);\n\n    this.updateScene = this.updateScene.bind(this);\n    this.deleteScene = this.deleteScene.bind(this);\n    this.state = {\n      currentScene: {\n        file_name: \"test\",\n        user: \"test\",\n        scene_name: \"\",\n        description: \"\",\n        category: \"\",\n        tag: \"\",\n        dataset: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"hello world\");\n    this.getScene(this.props.match.params.file_name); //???\n\n    console.log(\"hello\");\n  }\n\n  onChangeUser(e) {\n    const user = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentScene: { ...prevState.currentScene,\n          user: user\n        }\n      };\n    });\n  }\n\n  onChangeSceneName(e) {\n    const scene_name = e.target.value;\n    this.setState(prevState => ({\n      currentScene: { ...prevState.currentScene,\n        scene_name: scene_name\n      }\n    }));\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentScene: { ...prevState.currentScene,\n        description: description\n      }\n    }));\n  }\n\n  onChangeCategory(e) {\n    const category = e.target.value;\n    this.setState(prevState => ({\n      currentScene: { ...prevState.currentScene,\n        category: category\n      }\n    }));\n  }\n\n  onChangeTag(e) {\n    const tag = e.target.value;\n    this.setState(prevState => ({\n      currentScene: { ...prevState.currentScene,\n        tag: tag\n      }\n    }));\n  }\n\n  onChangeDataset(e) {\n    const dataset = e.target.value;\n    this.setState(prevState => ({\n      currentScene: { ...prevState.currentScene,\n        dataset: dataset\n      }\n    }));\n  }\n\n  getScene(file_name) {\n    console.log(\"!!!\");\n    SceneDataService.get(file_name).then(response => {\n      this.setState({\n        currentScene: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  } //   updatePublished(status) {\n  //     var data = {\n  //       id: this.state.currentTutorial.id,\n  //       title: this.state.currentTutorial.title,\n  //       description: this.state.currentTutorial.description,\n  //       published: status\n  //     };\n  //     TutorialDataService.update(this.state.currentTutorial.id, data)\n  //       .then(response => {\n  //         this.setState(prevState => ({\n  //           currentTutorial: {\n  //             ...prevState.currentTutorial,\n  //             published: status\n  //           }\n  //         }));\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   }\n\n\n  updateScene() {\n    SceneDataService.update(this.state.currentScene.file_name, this.state.currentScene).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The scene was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteScene() {\n    SceneDataService.delete(this.state.currentScene.file_name).then(response => {\n      console.log(response.data);\n      this.props.history.push('/scenes');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentScene\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, currentScene ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Scene\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"scene_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"Scene Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"scene_name\",\n      value: this.state.scene_name,\n      onChange: this.onChangeSceneName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      value: this.state.description,\n      onChange: this.onChangeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      value: this.state.category,\n      onChange: this.onChangeCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"tag\",\n      value: this.state.tag,\n      onChange: this.onChangeTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"dataset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \"Dataset\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"dataset\",\n      value: this.state.dataset,\n      onChange: this.onChangeDataset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"badge badge-danger mr-2\",\n      onClick: this.deleteScene,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"badge badge-success\",\n      onClick: this.updateScene,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link // to={\"/scenes/\" + currentScene.file_name}\n    , {\n      to: \"/scenes/display/\" + currentScene.file_name,\n      className: \"badge badge-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, \"Scene-editor\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, this.state.message)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, \"Please click on a Scene...\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidhan/Documents/GitHub/scene-editor-server/scene-editor-server-fe/src/components/scene.component.js"],"names":["React","Component","SceneDataService","Link","Scene","constructor","props","onChangeUser","bind","onChangeSceneName","onChangeDescription","onChangeCategory","onChangeTag","onChangeDataset","getScene","updateScene","deleteScene","state","currentScene","file_name","user","scene_name","description","category","tag","dataset","message","componentDidMount","console","log","match","params","e","target","value","setState","prevState","get","then","response","data","catch","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SceneDataService from \"../services/scene.service\";\n// import \"./component.css\"\nimport { Link } from \"react-router-dom\";\n\nexport default class Scene extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUser = this.onChangeUser.bind(this);\n    this.onChangeSceneName = this.onChangeSceneName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeTag = this.onChangeTag.bind(this);\n    this.onChangeDataset = this.onChangeDataset.bind(this);\n    this.getScene = this.getScene.bind(this);\n    // this.updatePublished = this.updatePublished.bind(this);\n    this.updateScene = this.updateScene.bind(this);\n    this.deleteScene = this.deleteScene.bind(this);\n\n    this.state = {\n      currentScene: {\n        file_name: \"test\",\n        user: \"test\",\n        scene_name: \"\",\n        description: \"\",\n        category: \"\",\n        tag: \"\",\n        dataset: \"\",\n      },\n      message: \"\"\n    };\n  }\n  \n  componentDidMount() {\n    console.log(\"hello world\")\n    this.getScene(this.props.match.params.file_name);  //???\n    console.log(\"hello\")\n  }\n\n  onChangeUser(e) {\n    const user = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentScene: {\n          ...prevState.currentScene,\n          user: user\n        }\n      };\n    });\n  }\n\n  onChangeSceneName(e) {\n    const scene_name = e.target.value;\n    \n    this.setState(prevState => ({\n        currentScene: {\n        ...prevState.currentScene,\n        scene_name: scene_name\n      }\n    }));\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n        currentScene: {\n        ...prevState.currentScene,\n        description: description\n      }\n    }));\n  }\n\n  onChangeCategory(e) {\n    const category = e.target.value;\n    \n    this.setState(prevState => ({\n        currentScene: {\n        ...prevState.currentScene,\n        category: category\n      }\n    }));\n  }\n\n  onChangeTag(e) {\n    const tag = e.target.value;\n    \n    this.setState(prevState => ({\n        currentScene: {\n        ...prevState.currentScene,\n        tag: tag\n      }\n    }));\n  }\n\n  onChangeDataset(e) {\n    const dataset = e.target.value;\n    \n    this.setState(prevState => ({\n        currentScene: {\n        ...prevState.currentScene,\n        dataset: dataset\n      }\n    }));\n  }\n\n  getScene(file_name) {\n    console.log(\"!!!\")\n    SceneDataService.get(file_name)\n      .then(response => {\n        this.setState({\n            currentScene: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n//   updatePublished(status) {\n//     var data = {\n//       id: this.state.currentTutorial.id,\n//       title: this.state.currentTutorial.title,\n//       description: this.state.currentTutorial.description,\n//       published: status\n//     };\n\n//     TutorialDataService.update(this.state.currentTutorial.id, data)\n//       .then(response => {\n//         this.setState(prevState => ({\n//           currentTutorial: {\n//             ...prevState.currentTutorial,\n//             published: status\n//           }\n//         }));\n//         console.log(response.data);\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   }\n\n  updateScene() {\n    SceneDataService.update(\n      this.state.currentScene.file_name,\n      this.state.currentScene\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The scene was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteScene() {    \n    SceneDataService.delete(this.state.currentScene.file_name)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/scenes')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentScene } = this.state;\n\n    return (\n      <div>\n        {currentScene ? (\n          <div className=\"edit-form\">\n            <h4>Scene</h4>\n            <form>\n                {/* <div className=\"form-group\">\n                <label htmlFor=\"user\">User</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"user\"\n                    value={this.state.user}\n                    onChange={this.onChangeUser}\n                />\n                </div> */}\n\n                <div className=\"form-group\">\n                <label htmlFor=\"scene_name\">Scene Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"scene_name\"\n                    value={this.state.scene_name}\n                    onChange={this.onChangeSceneName}\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"category\"\n                    value={this.state.category}\n                    onChange={this.onChangeCategory}\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"tag\">Tag</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"tag\"\n                    value={this.state.tag}\n                    onChange={this.onChangeTag}\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"dataset\">Dataset</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"dataset\"\n                    value={this.state.dataset}\n                    onChange={this.onChangeDataset}\n                />\n                </div>\n            </form>\n\n            \n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteScene}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateScene}\n            >\n              Update\n            </button>\n            <br></br>\n            <br></br>  \n            <Link\n                // to={\"/scenes/\" + currentScene.file_name}\n                to={\"/scenes/display/\" + currentScene.file_name}\n                className=\"badge badge-warning\"\n              >\n                Scene-editor\n            </Link>\n            \n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Scene...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}