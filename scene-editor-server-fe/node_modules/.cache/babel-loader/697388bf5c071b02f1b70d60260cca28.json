{"ast":null,"code":"import http from \"../http-common\";\n\nclass SceneDataService {\n  getAll() {\n    return http.get(\"/scenes\");\n  }\n\n  get(file_name) {\n    return http.get(`/scenes/${file_name}`);\n  }\n\n  create(data) {\n    return http.post(\"/scenes/\", data);\n  }\n\n  update(file_name, data) {\n    return http.put(`/scenes/${file_name}/`, data);\n  }\n\n  delete(file_name) {\n    return http.delete(`/scenes/${file_name}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/scenes`);\n  }\n\n  findByName(name) {\n    return http.get(`/scenes?name=${name}`);\n  }\n\n}\n\nexport default new SceneDataService();","map":{"version":3,"sources":["/Users/davidhan/Documents/GitHub/scene-editor-server/scene-editor-server-fe/src/services/scene.service.js"],"names":["http","SceneDataService","getAll","get","file_name","create","data","post","update","put","delete","deleteAll","findByName","name"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,MAAM,GAAG;AACP,WAAOF,IAAI,CAACG,GAAL,CAAS,SAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,SAAD,EAAY;AACb,WAAOJ,IAAI,CAACG,GAAL,CAAU,WAAUC,SAAU,EAA9B,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAON,IAAI,CAACO,IAAL,CAAU,UAAV,EAAsBD,IAAtB,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACJ,SAAD,EAAYE,IAAZ,EAAkB;AACtB,WAAON,IAAI,CAACS,GAAL,CAAU,WAAUL,SAAU,GAA9B,EAAkCE,IAAlC,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACN,SAAD,EAAY;AAChB,WAAOJ,IAAI,CAACU,MAAL,CAAa,WAAUN,SAAU,EAAjC,CAAP;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,WAAOX,IAAI,CAACU,MAAL,CAAa,SAAb,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAOb,IAAI,CAACG,GAAL,CAAU,gBAAeU,IAAK,EAA9B,CAAP;AACD;;AA3BoB;;AA8BvB,eAAe,IAAIZ,gBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass SceneDataService {\n  getAll() {\n    return http.get(\"/scenes\");\n  }\n\n  get(file_name) {\n    return http.get(`/scenes/${file_name}`);\n  }\n\n  create(data) {\n    return http.post(\"/scenes/\", data);\n  }\n\n  update(file_name, data) {\n    return http.put(`/scenes/${file_name}/`, data);\n  }\n\n  delete(file_name) {\n    return http.delete(`/scenes/${file_name}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/scenes`);\n  }\n\n  findByName(name) {\n    return http.get(`/scenes?name=${name}`);\n  }\n}\n\nexport default new SceneDataService();"]},"metadata":{},"sourceType":"module"}